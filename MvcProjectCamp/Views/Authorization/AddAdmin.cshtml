@model EntityLayer.Concrete.Admin
@{
    ViewBag.Title = "AddAdmin";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div>
    <h1>Yeni Admin Ekleme Sayfası</h1>
</div>
<div style="margin-left:5rem;margin-top:5rem">
    @using (Html.BeginForm("AddAdmin", "Authorization", FormMethod.Post))
    {
    <div class="form-group">
        @Html.Label("Admin Adı")
        @Html.TextBoxFor(x => x.AdminUserName, new { @class = "form-control", @style = "width:20rem" })
        @Html.ValidationMessageFor(x => x.AdminUserName)
        <br /><br />
        @Html.Label("Admin Mail")
        @Html.TextBoxFor(x => x.AdminMail, new { @class = "form-control", @style = "width:20rem" })
        @Html.ValidationMessageFor(x => x.AdminUserName)
        <br /><br />
        @Html.Label("Admin Şifre")
        @Html.PasswordFor(x => x.PasswordHash, new { @class = "form-control", @style = "width:20rem" })
        @Html.ValidationMessageFor(x => x.PasswordHash)
        <br /><br />
        @Html.Label("Admin Şifre Tekrar Girin")
        @Html.PasswordFor(x => x.PasswordSalt, new { @class = "form-control", @style = "width:20rem" })
        @Html.ValidationMessageFor(x => x.PasswordSalt)
        <br /><br />
        @Html.Label("Admin Rolünü Girin")
        @Html.TextBoxFor(x => x.AdminRole, new { @class = "form-control", @style = "width:20rem" })
        @Html.ValidationMessageFor(x => x.AdminRole)
        <br /><br />
        <br />
        <button class="btn btn-success">Kaydet</button>

    </div>
    }
</div>

